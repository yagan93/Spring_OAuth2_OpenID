#Service discovery
spring.application.name=client
server.port=8080
eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}

#OIDC token
spring.security.oauth2.client.registration.client-oidc.provider=spring
spring.security.oauth2.client.registration.client-oidc.client-id=client
spring.security.oauth2.client.registration.client-oidc.client-secret=secret
spring.security.oauth2.client.registration.client-oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.client-oidc.redirect-uri=http://127.0.0.1:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.client-oidc.scope=openid
spring.security.oauth2.client.registration.client-oidc.client-name=client-oidc

#Authorization Code
spring.security.oauth2.client.registration.client-authorization-code.provider=spring
spring.security.oauth2.client.registration.client-authorization-code.client-id=client
spring.security.oauth2.client.registration.client-authorization-code.client-secret=secret
spring.security.oauth2.client.registration.client-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.client-authorization-code.redirect-uri=http://127.0.0.1:8080/authorized
spring.security.oauth2.client.registration.client-authorization-code.scope=trust
spring.security.oauth2.client.registration.client-authorization-code.client-name=client-authorization-code

spring.security.oauth2.client.provider.spring.issuer-uri=http://localhost:8762